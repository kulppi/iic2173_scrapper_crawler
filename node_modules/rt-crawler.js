var mongojs = require('mongojs');
var db = mongojs('crawlerdb', ['rt']);

var fs = require('node-fs'),
		url = require('url'),
		Crawler = require("simplecrawler").Crawler
	//de forma iterativa...
	
var minutes = 5, the_interval = minutes * 60 * 1000;
setInterval(function() {
		console.log("empezando denuevo");
		
		function startCrawler()
        { 
		
		var myCrawlerRT = new Crawler("www.rottentomatoes.com")
		myCrawlerRT.initialPath = "/";
		myCrawlerRT.interval = 250;
		myCrawlerRT.maxConcurrency = 5;
		myCrawlerRT.timeout = 2000;
		myCrawlerRT.listenerTTL = 1500;
		
		myCrawlerRT.on("complete",function(){
                //una vez que la lista se acabe
                console.log("lista terminada");
                killRT();        
                startCrawler();                
        });

		myCrawlerRT.on("fetchstart",function(queueItem){
			console.log("Starting request for:",queueItem.url);
			console.log("RT: ", myCrawlerRT.queue.length);
		});

		myCrawlerRT.on("fetchcomplete",function(queueItem, responseBuffer, response) {
			//console.log("I just received %s (%d bytes)",queueItem.url,responseBuffer.length);
			//console.log("It was a resource of type %s",response.headers['content-type']);
			if(queueItem.url.indexOf("/m/") != -1)
			{	
				var index = queueItem.url.indexOf("/m/");
				var indexLast = 0
				for(var i = index + 3; i < queueItem.url.length; i++ )
				{
					if(queueItem.url.charAt(i) = '/')
					{
						indexLast = i;
						break;
					}
				}
                var url = "http://www.rottentomatoes.com"+queueItem.url.substr(index, indexLast - index + 1); 
				db.rt.insert({'url':url, 'sitio':"Rotten Tomatoes"});	
				console.log("Listo:", url);
			}
		});
		
		var timeOutInitial = setTimeout(restart, 290000);
	
        myCrawlerRT.start();
		
        function restart(){
        console.log("procesar queue..");
                myCrawlerRT.stop();
                var processed_urls = 0
                while(myCrawlerRT.queue.length > 0)
                {
                        url = myCrawlerRT.queue.pop().url;
                        if(url.indexOf("/m/") != -1)
                        {
                                var index = url.indexOf("/m/");
								var indexLast = 0
								for(var i = index + 3; i < url.length; i++ )
								{
									if(url.charAt(i) == '/')
									{
										indexLast = i;
										break;
									}
								}
                                var processed_url = "http://www.rottentomatoes.com"+url.substr(index, indexLast - index + 1); 
								db.rt.insert({'url':url, 'sitio':"Rotten Tomatoes"});
                                console.log("Listo:", processed_url);
                                processed_urls ++;                                
                        }								
                }
                console.log("Procesado: ", processed_urls );
                console.log("borrando mycrawlerRT...");
                delete myCrawlerRT;        
        }
        function killRT() {
                myCrawlerRT.stop();
                console.log("borrando mycrawlerRT...");
                delete myCrawlerRT;
                }
        }
        startCrawler();
	
}, the_interval);
	
	function startCrawler()
    {  
	console.log("empezando del principio");

	var myCrawlerRT = new Crawler("www.rottentomatoes.com")
		myCrawlerRT.initialPath = "/";
		myCrawlerRT.interval = 500;
		myCrawlerRT.maxConcurrency = 5;
		myCrawlerRT.timeout = 1500;
		myCrawlerRT.listenerTTL = 1500;
		
		myCrawlerRT.on("complete",function(){
                //una vez que la lista se acabe
                console.log("lista terminada");
                killRT();        
                startCrawler();                
        })

		myCrawlerRT.on("fetchstart",function(queueItem){
			//console.log("Starting request for:",queueItem.url);
			console.log("RT: ", myCrawlerRT.queue.length);
		})

		myCrawlerRT.on("fetchcomplete",function(queueItem, responseBuffer, response) {
			//console.log("I just received %s (%d bytes)",queueItem.url,responseBuffer.length);
			//console.log("It was a resource of type %s",response.headers['content-type']);
			if(queueItem.url.indexOf("/m/") != -1)
			{	
				var index = queueItem.url.indexOf("/m/");
				var indexLast = 0
				for(var i = index + 3; i < queueItem.url.length; i++ )
				{
					if(queueItem.url.charAt(i) == "/")
					{
						indexLast = i;
						break;
					}
				}
                var url = "http://www.rottentomatoes.com"+queueItem.url.substr(index, indexLast - index + 1); 
				db.rt.insert({'url':url, 'sitio':"Rotten Tomatoes"});	
				console.log("Listo:", url);				
			}
		});
	var timeOutInitial = setTimeout(restart, 30000);
	
        myCrawlerRT.start();
		
        function restart(){
        console.log("procesar queue..");
                myCrawlerRT.stop();
                var processed_urls = 0
                while(myCrawlerRT.queue.length > 0)
                {
                        url = myCrawlerRT.queue.pop().url;
                        if(url.indexOf("/m/") != -1)
                        {
                                var index = url.indexOf("/m/");
								var indexLast = 0
								for(var i = index + 3; i < url.length; i++ )
								{
									if(url.charAt(i) == '/')
									{
										indexLast = i;
										break;
									}
								}
                                var processed_url = "http://www.rottentomatoes.com"+url.substr(index, indexLast - index + 1); 
								db.rt.insert({'url':url, 'sitio':"Rotten Tomatoes"});
                                console.log("Listo:", processed_url);
                                processed_urls ++;                                
                        }								
                }
                console.log("Procesado: ", processed_urls );
                console.log("borrando mycrawlerRT...");
                delete myCrawlerRT;        
        }
        function killRT() {
                myCrawlerRT.stop();
                console.log("borrando mycrawlerRT...");
                delete myCrawlerRT;
                }
        }        
        startCrawler();
